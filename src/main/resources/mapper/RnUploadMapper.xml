<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzl.ssm.dao.RnUploadMapper">
  <resultMap id="BaseResultMap" type="com.zzl.ssm.entity.RnUpload">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="app_vname" jdbcType="VARCHAR" property="appVname" />
    <result column="app_vcode" jdbcType="INTEGER" property="appVcode" />
    <result column="jsbundle_name" jdbcType="VARCHAR" property="jsbundleName" />
    <result column="jsbundle_url" jdbcType="VARCHAR" property="jsbundleUrl" />
    <result column="test_num" jdbcType="INTEGER" property="testNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_vname, app_vcode, jsbundle_name, jsbundle_url, test_num, status, username, 
    userid, create_time
  </sql>
  <select id="selectByExample" parameterType="com.zzl.ssm.entity.RnUpload" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mmall_rn_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mmall_rn_upload
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mmall_rn_upload
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zzl.ssm.entity.RnUpload">
    delete from mmall_rn_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zzl.ssm.entity.RnUpload">
    insert into mmall_rn_upload (id, app_vname, app_vcode, 
      jsbundle_name, jsbundle_url, test_num, 
      status, username, userid, 
      create_time, describe)
    values (#{id,jdbcType=INTEGER}, #{appVname,jdbcType=VARCHAR}, #{appVcode,jdbcType=INTEGER}, 
      #{jsbundleName,jdbcType=VARCHAR}, #{jsbundleUrl,jdbcType=VARCHAR}, #{testNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{describe, jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zzl.ssm.entity.RnUpload">
    insert into mmall_rn_upload
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="appVname != null">
        app_vname,
      </if>
      <if test="appVcode != null">
        app_vcode,
      </if>
      <if test="jsbundleName != null">
        jsbundle_name,
      </if>
      <if test="jsbundleUrl != null">
        jsbundle_url,
      </if>
      <if test="testNum != null">
        test_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="userid != null">
        userid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="appVname != null">
        #{appVname,jdbcType=VARCHAR},
      </if>
      <if test="appVcode != null">
        #{appVcode,jdbcType=INTEGER},
      </if>
      <if test="jsbundleName != null">
        #{jsbundleName,jdbcType=VARCHAR},
      </if>
      <if test="jsbundleUrl != null">
        #{jsbundleUrl,jdbcType=VARCHAR},
      </if>
      <if test="testNum != null">
        #{testNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zzl.ssm.entity.RnUpload" resultType="java.lang.Long">
    select count(*) from mmall_rn_upload
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mmall_rn_upload
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.appVname != null">
        app_vname = #{record.appVname,jdbcType=VARCHAR},
      </if>
      <if test="record.appVcode != null">
        app_vcode = #{record.appVcode,jdbcType=INTEGER},
      </if>
      <if test="record.jsbundleName != null">
        jsbundle_name = #{record.jsbundleName,jdbcType=VARCHAR},
      </if>
      <if test="record.jsbundleUrl != null">
        jsbundle_url = #{record.jsbundleUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.testNum != null">
        test_num = #{record.testNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userid = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mmall_rn_upload
    set id = #{record.id,jdbcType=INTEGER},
      app_vname = #{record.appVname,jdbcType=VARCHAR},
      app_vcode = #{record.appVcode,jdbcType=INTEGER},
      jsbundle_name = #{record.jsbundleName,jdbcType=VARCHAR},
      jsbundle_url = #{record.jsbundleUrl,jdbcType=VARCHAR},
      test_num = #{record.testNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      userid = #{record.userid,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzl.ssm.entity.RnUpload">
    update mmall_rn_upload
    <set>
      <if test="appVname != null">
        app_vname = #{appVname,jdbcType=VARCHAR},
      </if>
      <if test="appVcode != null">
        app_vcode = #{appVcode,jdbcType=INTEGER},
      </if>
      <if test="jsbundleName != null">
        jsbundle_name = #{jsbundleName,jdbcType=VARCHAR},
      </if>
      <if test="jsbundleUrl != null">
        jsbundle_url = #{jsbundleUrl,jdbcType=VARCHAR},
      </if>
      <if test="testNum != null">
        test_num = #{testNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userid = #{userid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzl.ssm.entity.RnUpload">
    update mmall_rn_upload
    set app_vname = #{appVname,jdbcType=VARCHAR},
      app_vcode = #{appVcode,jdbcType=INTEGER},
      jsbundle_name = #{jsbundleName,jdbcType=VARCHAR},
      jsbundle_url = #{jsbundleUrl,jdbcType=VARCHAR},
      test_num = #{testNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      userid = #{userid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>